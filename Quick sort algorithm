
void swap(int arr[], int a, int b) {

	int temp = arr[a];

	arr[a] = arr[b];

	arr[b] = temp;

}



int Partition(int arr[], int left, int right) {

	int pivot = arr[left]; // 피벗의 위치는 가장 왼쪽에서 시작

	int low = left + 1;

	int high = right;



	while (low <= high) // 교차되기 전까지 반복한다 

	{

		while (pivot >= arr[low] && low <= right) // 피벗보다 큰 값을 찾는 과정 

		{

			low++; // low를 오른쪽으로 이동 

		}

		while (pivot <= arr[high] && high >= (left + 1)) // 피벗보다 작은 값을 찾는 과정 

		{

			high--; // high를 왼쪽으로 이동

		}

		if (low <= high)// 교차되지 않은 상태이면 스왑 과정 실행 

		{

			swap(arr, low, high); //low와 high를 스왑 

		}

	}

	swap(arr, left, high); // 피벗과 high가 가리키는 대상을 교환 

	return high;  // 옮겨진 피벗의 위치정보를 반환

}



void quick(int arr[], int left, int right) {

	if (left <= right) {

		int pivot = Partition(arr, left, right);

		quick(arr, left, pivot - 1);

		quick(arr, pivot + 1, right);

	}

}
